x-supernode: &supernode
  user: root
  deploy:
    resources:
      limits:
        cpus: "2"
  command:
    - --superlink
    - superlink:9092
    - --insecure
  depends_on:
    - superlink
  volumes:
    - apps-volume:/app/.flwr/apps/:ro

services:
  # create a SuperLink service
  superlink:
    image: flwr/superlink:1.10.0.dev20240719
    command:
      - --insecure

  # create a SuperNode service with two containers
  supernode-1:
    <<: *supernode
    build:
      context: .
      dockerfile_inline: |
        FROM flwr/supernode:1.10.0.dev20240719

        WORKDIR /app
        COPY --chown=app:app pyproject.toml .
        RUN sed -i 's/.*flwr\[simulation\].*//' pyproject.toml \
          && python -m pip install -U --no-cache-dir .

        ENTRYPOINT ["flower-supernode", "client:app", "--node-config", "partition-id=0,num-partitions=2"]

  supernode-2:
    <<: *supernode
    build:
      context: .
      dockerfile_inline: |
        FROM flwr/supernode:1.10.0.dev20240719

        WORKDIR /app
        COPY --chown=app:app pyproject.toml .
        RUN sed -i 's/.*flwr\[simulation\].*//' pyproject.toml \
          && python -m pip install -U --no-cache-dir .

        ENTRYPOINT ["flower-supernode", "client:app", "--node-config", "partition-id=1,num-partitions=2"]

  # create a SuperExec service
  superexec:
    user: root
    build:
      context: .
      dockerfile_inline: |
        FROM flwr/supernode:1.10.0.dev20240719

        WORKDIR /app
        COPY --chown=app:app pyproject.toml .
        RUN sed -i 's/.*flwr\[simulation\].*//' pyproject.toml \
          && python -m pip install -U --no-cache-dir .

        ENTRYPOINT ["flower-superexec"]
    ports:
      - 9093:9093
    command:
      - --executor
      - flwr.superexec.deployment:executor
      - --insecure
      - --executor-config
      - superlink=superlink:9091
    depends_on:
      - superlink
    volumes:
      - apps-volume:/app/.flwr/apps/:rw

volumes:
     apps-volume:
